name: Backend CI/CD

on:
  push:
    branches: [ master ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    env:
      IMAGE_NAME: idealclone/instagram-backend
      IMAGE_TAG: ${{ github.sha }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ${{ env.IMAGE_NAME }}:latest
            ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
          build-args: |
            DB_HOST=${{ secrets.DB_HOST }}
            DB_NAME=${{ secrets.DB_NAME }}
            DB_PORT=${{ secrets.DB_PORT }}
            DB_USERNAME=${{ secrets.DB_USERNAME }}
            DB_PASSWORD=${{ secrets.DB_PASSWORD }}
            AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}
            AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}
            AWS_REGION=${{ secrets.AWS_REGION }}
            AWS_BUCKET_NAME=${{ secrets.AWS_BUCKET_NAME }}
            S3_REGION=${{ secrets.S3_REGION }}
            S3_BUCKET_NAME=${{ secrets.S3_BUCKET_NAME }}
            S3_ACCESS_KEY_ID=${{ secrets.S3_ACCESS_KEY_ID }}
            S3_SECRET_ACCESS_KEY=${{ secrets.S3_SECRET_ACCESS_KEY }}
            JWT_SECRET_KEY=${{ secrets.JWT_SECRET_KEY }}
            JWT_EXPIRES_IN=${{ secrets.JWT_EXPIRES_IN }}
            OAUTH_CLIENT_ID=${{ secrets.OAUTH_CLIENT_ID }}
            OAUTH_CLIENT_SECRET=${{ secrets.OAUTH_CLIENT_SECRET }}
            FRONTEND_URL=${{ secrets.FRONTEND_URL }}

      - name: Install doctl
        run: |
          curl -sL https://github.com/digitalocean/doctl/releases/download/v1.105.0/doctl-1.105.0-linux-amd64.tar.gz -o doctl.tar.gz
          tar -xzf doctl.tar.gz
          sudo mv doctl /usr/local/bin

      - name: Authenticate doctl
        run: doctl auth init --access-token ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Set up Kubeconfig
        run: doctl kubernetes cluster kubeconfig save e204b213-4401-40bb-8ab4-2fc9f63fdcaf

      - name: Create backend-secrets in Kubernetes
        run: |
          kubectl delete secret backend-secrets --ignore-not-found
          kubectl create secret generic backend-secrets \
            --from-literal=DB_HOST=${{ secrets.DB_HOST }} \
            --from-literal=DB_NAME=${{ secrets.DB_NAME }} \
            --from-literal=DB_PORT=${{ secrets.DB_PORT }} \
            --from-literal=DB_USERNAME=${{ secrets.DB_USERNAME }} \
            --from-literal=DB_PASSWORD=${{ secrets.DB_PASSWORD }} \
            --from-literal=AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }} \
            --from-literal=AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }} \
            --from-literal=AWS_REGION=${{ secrets.AWS_REGION }} \
            --from-literal=AWS_BUCKET_NAME=${{ secrets.AWS_BUCKET_NAME }} \
            --from-literal=S3_REGION=${{ secrets.S3_REGION }} \
            --from-literal=S3_BUCKET_NAME=${{ secrets.S3_BUCKET_NAME }} \
            --from-literal=S3_ACCESS_KEY_ID=${{ secrets.S3_ACCESS_KEY_ID }} \
            --from-literal=S3_SECRET_ACCESS_KEY=${{ secrets.S3_SECRET_ACCESS_KEY }} \
            --from-literal=JWT_SECRET_KEY=${{ secrets.JWT_SECRET_KEY }} \
            --from-literal=JWT_EXPIRES_IN=${{ secrets.JWT_EXPIRES_IN }} \
            --from-literal=OAUTH_CLIENT_ID=${{ secrets.OAUTH_CLIENT_ID }} \
            --from-literal=OAUTH_CLIENT_SECRET=${{ secrets.OAUTH_CLIENT_SECRET }} \
            --from-literal=FRONTEND_URL=${{ secrets.FRONTEND_URL }}

      - name: Apply manifests
        run: |
          kubectl apply -f backend-deployment.yaml

      - name: Update backend deployment image
        run: |
          kubectl set image deployment/instagram-backend backend=idealclone/instagram-backend:${{ env.IMAGE_TAG }}
          kubectl rollout status deployment/instagram-backend
